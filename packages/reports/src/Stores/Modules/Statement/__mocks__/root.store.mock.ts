export const root_store_mock = {
    common: {
        routeTo: jest.fn(),
    },
    client: {
        standpoint: {
            iom: false,
            malta: true,
        },
        accounts: {
            CR90000001: {
                is_virtual: 0,
                currency: 'USD',
            },
            CR90000002: {
                is_virtual: 0,
                currency: 'BTC',
            },
        },
        loginid: 'CR1234567',
        is_logged_in: true,
        currency: 'BTC',
        switchAccount: jest.fn(),
    },
    active_symbols: {
        active_symbols: [
            {
                allow_forward_starting: 0,
                display_name: 'AUD/JPY',
                display_order: 1,
                exchange_is_open: 1,
                is_trading_suspended: 0,
                market: 'forex',
                market_display_name: 'Forex',
                pip: 0.001,
                subgroup: 'none',
                subgroup_display_name: 'None',
                submarket: 'major_pairs',
                submarket_display_name: 'Major Pairs',
                symbol: 'frxAUDJPY',
                symbol_type: 'forex',
            },
            {
                allow_forward_starting: 0,
                display_name: 'AUD/USD',
                display_order: 2,
                exchange_is_open: 1,
                is_trading_suspended: 0,
                market: 'forex',
                market_display_name: 'Forex',
                pip: 1e-5,
                subgroup: 'none',
                subgroup_display_name: 'None',
                submarket: 'major_pairs',
                submarket_display_name: 'Major Pairs',
                symbol: 'frxAUDUSD',
                symbol_type: 'forex',
            },
            {
                allow_forward_starting: 0,
                display_name: 'BTC/USD',
                display_order: 0,
                exchange_is_open: 1,
                is_trading_suspended: 0,
                market: 'cryptocurrency',
                market_display_name: 'Cryptocurrencies',
                pip: 0.001,
                subgroup: 'none',
                subgroup_display_name: 'None',
                submarket: 'non_stable_coin',
                submarket_display_name: 'Cryptocurrencies',
                symbol: 'cryBTCUSD',
                symbol_type: 'cryptocurrency',
            },
        ],
        echo_req: { active_symbols: 'brief', product_type: 'basic', req_id: 1 },
        msg_type: 'active_symbols',
        req_id: 1,
    },
    modules: {
        cashier: {
            general_store: {
                setIsDeposit: jest.fn(),
            },
        },
    },
};

export const mock_statement_success = {
    echo_req: {
        date_to: 1674086399,
        description: 1,
        limit: 100,
        req_id: 3,
        statement: 1,
    },
    msg_type: 'statement',
    req_id: 3,
    statement: {
        count: 100,
        transactions: [
            {
                action_type: 'withdrawal',
                amount: -10596.3,
                app_id: 16929,
                balance_after: 10000,
                contract_id: null,
                longcode: 'Reset to default demo account balance.',
                payout: null,
                reference_id: null,
                shortcode: null,
                transaction_id: 389474493528,
                transaction_time: 1673285658,
            },
            {
                action_type: 'sell',
                amount: 381.46,
                app_id: 2,
                balance_after: 20596.3,
                contract_id: 193590004408,
                longcode: 'Win payout if Volatility 100 (1s) Index after 6 ticks is strictly lower than entry spot.',
                payout: 381.46,
                purchase_time: 1671845134,
                reference_id: 386441201828,
                shortcode: 'PUT_1HZ100V_381.46_1671845134_6T_S0P_0',
                transaction_id: 386441213368,
                transaction_time: 1671845141,
            },
        ],
    },
};
