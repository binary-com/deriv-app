type TMessage = () => string;
type TParameter = string | number;

export type TFormErrorMessagesTypes = {
    address: TMessage;
    barrier: TMessage;
    email: TMessage;
    general: TMessage;
    letter_symbol: TMessage;
    password: TMessage;
    po_box: TMessage;
    phone: TMessage;
    postcode: TMessage;
    signup_token: TMessage;
    tax_id: TMessage;
    number: TMessage;
    decimalPlaces: (decimals: TParameter) => string;
    value: (value: TParameter) => string;
    betweenMinMax: (min_value: TParameter, max_value: TParameter) => string;
    minNumber: (min_value: TParameter) => string;
    maxNumber: (max_value: TParameter) => string;
    password_warnings: {
        use_a_few_words: TMessage;
        no_need_for_mixed_chars: TMessage;
        uncommon_words_are_better: TMessage;
        straight_rows_of_keys_are_easy: TMessage;
        short_keyboard_patterns_are_easy: TMessage;
        use_longer_keyboard_patterns: TMessage;
        repeated_chars_are_easy: TMessage;
        repeated_patterns_are_easy: TMessage;
        avoid_repeated_chars: TMessage;
        sequences_are_easy: TMessage;
        avoid_sequences: TMessage;
        recent_years_are_easy: TMessage;
        avoid_recent_years: TMessage;
        avoid_associated_years: TMessage;
        dates_are_easy: TMessage;
        avoid_associated_dates_and_years: TMessage;
        top10_common_password: TMessage;
        top100_common_password: TMessage;
        very_common_password: TMessage;
        similar_to_common_password: TMessage;
        a_word_is_easy: TMessage;
        names_are_easy: TMessage;
        common_names_are_easy: TMessage;
        capitalization_doesnt_help: TMessage;
        all_uppercase_doesnt_help: TMessage;
        reverse_doesnt_help: TMessage;
        substitution_doesnt_help: TMessage;
        user_dictionary: TMessage;
    };
};
